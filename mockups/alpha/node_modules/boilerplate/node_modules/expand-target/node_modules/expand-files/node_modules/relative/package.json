{
  "name": "relative",
  "description": "Get the relative filepath from path A to path B. Calculates from file-to-directory, file-to-file, directory-to-file, and directory-to-directory.",
  "version": "3.0.2",
  "homepage": "https://github.com/jonschlinkert/relative",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/relative"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/relative/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "isobject": "^2.0.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "keywords": [
    "absolute",
    "calculate",
    "file",
    "filepath",
    "fs",
    "normalize",
    "path",
    "path-relative",
    "relative",
    "resolve"
  ],
  "verb": {
    "related": {
      "list": [
        "cwd",
        "export-files",
        "is-absolute",
        "is-relative",
        "is-dotfile",
        "global-prefix"
      ]
    }
  },
  "readme": "# relative [![NPM version](https://badge.fury.io/js/relative.svg)](http://badge.fury.io/js/relative)\n\n> Get the relative filepath from path A to path B. Calculates from file-to-directory, file-to-file, directory-to-file, and directory-to-directory.\n\n**Calculates correctly from:**\n\n* file-to-directory\n* file-to-file\n* directory-to-file\n* directory-to-directory\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i relative --save\n```\n\n## Usage\n\n```js\nvar relative = require('relative');\nrelative(from, to);\n\nrelative('a/b/c.txt', 'd');\n//=> '../../d'\n\nrelative('d', 'a/b/c.txt');\n//=> '../a/b/c.txt'\n```\n\nRelative to `process.cwd()`\n\n```js\nrelative('a/b/c.txt');\n//=> 'a/b/c.txt'\n\nrelative(process.cwd(), 'a/b/c.txt');\n//=> 'a/b/c.txt'\n\nrelative('a/b/c.txt', process.cwd());\n//=> '..'\n```\n\n### stat\n\nThere are cases where it is impossible to tell if a path is a file or a directory without more information.\n\n**Examples**\n\nIf assume that `a.b.c` is a directory, we have no way of know that without hitting the filesystem, which is impossible if the path doesn't actually exist.\n\nSo the result would be:\n\n```js\nrelative('fixtures/a.b.c', 'fixtures');\n//=> '.'\n```\n\n**If the path exists**\n\nPass `true` as the last argument, or pass the stat object from `fs.stat()`/`fs.statSync()` and you will get the correct result.\n\n```js\nrelative('fixtures/a.b.c', 'fixtures', true);\n//=> '..'\n```\n\n**If the path does not exist**\n\nEnd directory names with trailing slash. If you can't or don't want to do that, you may get incorrect results from time to time, but there isn't much we can do about it.\n\nOne very bad idea I had was to create a whitelist of filenames that look like directories, and directories that look like file names so that when those paths are encountered the logic would be adjusted accordingly. Anyway, it is what it is.\n\n## relative.toBase()\n\nGet the relative path to the given `base`.\n\n```js\nrelative.toBase(base, filepath);\n```\n\n**Example**:\n\n```js\nrelative.toBase('a/b', 'a/b/c/d/file.txt');\n//=> 'c/d/file.txt'\n```\n\n## Other useful libs\n\n* [cwd](https://github.com/jonschlinkert/cwd): Node.js util for easily getting the current working directory of a project based on package.json… [more](https://github.com/jonschlinkert/cwd)\n* [export-files](https://github.com/jonschlinkert/export-files): node.js utility for exporting a directory of files as modules.\n* [global-prefix](https://github.com/jonschlinkert/global-prefix): Get the npm global path prefix.\n* [is-absolute](https://github.com/jonschlinkert/is-absolute): Return true if a file path is absolute.\n* [is-relative](https://github.com/jonschlinkert/is-relative): Returns `true` if the path appears to be relative.\n* [is-dotfile](https://github.com/jonschlinkert/is-dotfile): Return true if a file path is (or has) a dotfile.\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/relative/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2014-2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 09, 2015._",
  "readmeFilename": "README.md",
  "_id": "relative@3.0.2",
  "_shasum": "0dcd8ec54a5d35a3c15e104503d65375b5a5367f",
  "_from": "relative@^3.0.2",
  "_resolved": "https://registry.npmjs.org/relative/-/relative-3.0.2.tgz"
}
