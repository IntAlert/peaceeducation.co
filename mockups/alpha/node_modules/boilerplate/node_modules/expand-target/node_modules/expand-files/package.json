{
  "name": "expand-files",
  "description": "Expand glob patterns in a declarative configuration into src-dest mappings.",
  "version": "0.7.1",
  "homepage": "https://github.com/jonschlinkert/expand-files",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/expand-files"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/expand-files/issues"
  },
  "license": "MIT",
  "files": [
    "index.js",
    "utils.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "define-property": "^0.2.5",
    "expand-utils": "^0.1.3",
    "extend-shallow": "^2.0.1",
    "glob-parent": "^2.0.0",
    "has-glob": "^0.1.1",
    "lazy-cache": "^1.0.3",
    "matched": "^0.4.1",
    "normalize-config": "^0.4.8",
    "object.omit": "^2.0.0",
    "relative": "^3.0.2",
    "resolve-dir": "^0.1.0",
    "use": "^1.1.2"
  },
  "devDependencies": {
    "assert-path": "^0.1.0",
    "expand": "^0.4.0",
    "for-in": "^0.1.4",
    "global-modules": "^0.2.0",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.1.1",
    "gulp-istanbul": "^0.10.3",
    "gulp-mocha": "^2.2.0",
    "mixin-deep": "^1.1.3",
    "mocha": "*",
    "placeholders": "^0.2.0",
    "should": "*",
    "stringify-object": "github:jonschlinkert/stringify-object",
    "to-clipboard": "^0.2.0",
    "vinyl": "^1.1.0"
  },
  "keywords": [
    "config",
    "configuration",
    "dest",
    "destination",
    "expand",
    "files",
    "files array",
    "files object",
    "normalize",
    "options",
    "src",
    "src-dest",
    "target",
    "task"
  ],
  "verb": {
    "related": {
      "list": [
        "expand",
        "expand-config",
        "expand-files",
        "expand-target",
        "expand-task",
        "expand-utils",
        "map-dest",
        "normalize-config"
      ],
      "description": ""
    }
  },
  "readme": "# expand-files [![NPM version](https://img.shields.io/npm/v/expand-files.svg)](https://www.npmjs.com/package/expand-files) [![Build Status](https://img.shields.io/travis/jonschlinkert/expand-files.svg)](https://travis-ci.org/jonschlinkert/expand-files)\n\n> Expand glob patterns in a declarative configuration into src-dest mappings.\n\n**Examples**\n\nExpands `src` glob patterns and creates `dest` mappings:\n\n```js\nvar files = require('expand-files');\n\n// pass any \"global\" options to `files`\nconfig = files({cwd: 'test/fixtures'});\n\n// src, dest list\nconfig.expand('*.txt', 'dist/');\n\n// expand src-dest object \nconfig.expand({\n  src: '*.txt',\n  dest: 'dist/'\n});\n\n// expand src-dest mappings \nconfig.expand({\n  'dist/': '*.txt'\n});\n\n// expand files objects\nconfig.expand({\n  files: {\n    'dist/': '*.txt'\n  }\n});\n\n// expand files arrays\nconfig.expand({\n  files: [\n    {src: '*.txt', dest: 'dist/'}\n    //...\n  ]\n});\n```\n\n**Results**\n\nAll of the above result in the following array:\n\n```js\n[\n  {src: ['test/fixtures/a.txt'], dest: 'dist/a.txt'},\n  {src: ['test/fixtures/b.txt'], dest: 'dist/b.txt'},\n  {src: ['test/fixtures/c.txt'], dest: 'dist/c.txt'},\n  {src: ['test/fixtures/d.txt'], dest: 'dist/d.txt'}\n]\n```\n\nSee [examples](./examples.md) of possible configurations.\n\n## Table of contents\n- [Install](#install)\n- [Usage](#usage)\n- [dest behavior](#dest-behavior)\n- [Plugins](#plugins)\n  * [Nodes](#nodes)\n- [Examples](#examples)\n- [options](#options)\n  * [mapDest](#mapdest)\n  * [flatten](#flatten)\n  * [ext](#ext)\n  * [extDot](#extdot)\n  * [cwd](#cwd)\n  * [rename](#rename)\n  * [filter](#filter)\n  * [options properties](#options-properties)\n- [Related projects](#related-projects)\n- [Coverage](#coverage)\n- [Running tests](#running-tests)\n- [Contributing](#contributing)\n- [Author](#author)\n- [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm i expand-files --save\n```\n\n## Usage\n\n```js\nvar files = require('expand-files');\nvar config = files(options);\n\n// pass a list of arguments\nconfig.expand('src', 'dest', options);\n\n// or an object with `src`/`dest`\nconfig.expand({\n  options: options,\n  src: ['src'], \n  dest: 'dest'\n});\n\n// or an object with a `files` object\nconfig.expand({\n  options: options,\n  files: {\n    src: 'src',\n    dest: 'dest'\n  }\n});\n\n// or an object with `files` mappings\nconfig.expand({\n  options: options,\n  files: {\n    'foo/': '*.js',\n    'bar/': '*.js',\n    'baz/': '*.js'\n  }\n});\n\n// or an object with an array of `files` objects\nconfig.expand({\n  options: options,\n  files: [\n    {src: 'src', dest: 'dest'}\n  ]\n});\n\n// or an object with an array of glob patterns\nconfig.expand({\n  options: options,\n  files: ['*.js', '*.txt']\n});\n```\n\n## dest behavior\n\nBy default, `src` is appended to the defined `dest`. If `flatten` is true, then `src` basename is appended to `dest`.\n\n**Examples**\n\n```js\nconfig.expand({src: 'index.js', dest: 'dist/'});\n//=> [ { src: [ 'index.js' ], dest: 'dist/' } ]\n\nconfig.expand({src: 'index.js', dest: 'dist/', mapDest: true});\n//=> [{ src: [ 'index.js' ], dest: 'dist/index.js' } ]\n```\n\n## Plugins\n\nPlugins can be used to modify to resulting object. A plugin is a function that takes `config` as its only parameter. \n\n**Example**\n\n```js\nvar config = new Files();\nfunction addFoo(config) {\n  config.foo = 'bar';\n}\nconfig.use(addFoo);\nconsole.log(config.expand({src: '*.js'}).files);\n```\n\nResults in an object that looks something like:\n\n```js\n{\n  options: {},\n  foo: 'bar', //<= our added property\n  files: [{ \n    options: {}, \n    src: ['examples.js', 'gulpfile.js', 'index.js', 'utils.js'], \n    dest: '' } \n  ] \n}\n```\n\n### Nodes\n\nIt's also possible to modify individual files nodes as they're created on the `files` array. To do so, simply return a function in the plugin and it will be called on each node.\n\nAdditionally, you can either modify the node before it's normalized or after, by checking for the `rawNode` property or `filesNode` respectively. \n\n**Examples**\n\n\n```js\nvar config = new Files();\nfunction updateNode(config) {\n  config.foo = 'bar';\n\n  return function fn(node) {\n    if (!node.filesNode) return fn;\n    // return the plugin function if it's not a filesNode\n    // this way we know with certainty that `node`\n    // will be a filesNode\n    node.options.one = 'two';\n    node.dest = 'baz/';\n    node.abc = 'xyz';\n  };\n}\nconfig.use(updateNode);\nconsole.log(config.expand({src: '*.js'}).files);\n```\n\n\nResults in an object that looks something like:\n\n```js\n{\n  options: {},\n  foo: 'bar', //<= our added `config` property\n  files: [{ \n    options: { one: 'two' }, \n    src: ['examples.js', 'gulpfile.js', 'index.js', 'utils.js'], \n    dest: 'baz/',\n    abc: 'xyz' } \n  ] \n}\n```\n\n## Examples\n\nSupports any of the formats supported by the [files-objects][] library as well as any of the configurations in [examples.md](./examples.md).\n\n## options\n\n### mapDest\n\nExpand src-dest mappings. Creates a `dest` filepath for each `src` filepath.\n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example:**\n\n```js\nconfig.expand({src: 'test/fixtures/*.js', dest: 'dist/', mapDest: true});\n```\n\n**results in**\n\n```js\n[ \n  {src: [ 'test/fixtures/x.js' ], dest: 'dist/test/fixtures/x.js' },\n  {src: [ 'test/fixtures/y.js' ], dest: 'dist/test/fixtures/y.js' },\n  {src: [ 'test/fixtures/z.js' ], dest: 'dist/test/fixtures/z.js' } \n]\n```\n\n### flatten\n\nFlatten destination paths. Joins the `src` basename to the defined `dest` path. \n\n**Type**: `Boolean`\n\n**Default**: `undefined`\n\n**Example:**\n\n```js\nconfig.expand({src: 'test/fixtures/*.js', dest: 'dist/', mapDest: true, flatten: true});\n```\n\n**results in**\n\n```js\n[ \n  {src: [ 'test/fixtures/x.js' ], dest: 'dist/x.js' },\n  {src: [ 'test/fixtures/y.js' ], dest: 'dist/y.js' },\n  {src: [ 'test/fixtures/z.js' ], dest: 'dist/z.js' } \n]\n```\n\n### ext\n\nThe extension to use on dest files.\n\n**Type**: `String`\n\n**Default**: `undefined`\n\n**Example:**\n\n```js\nconfig.expand({src: '*.coffee', dest: 'dist/', ext: '.js'});\n```\n\n### extDot\n\nThe part of the extension to use on dest files when the extension is automatically mapped from `src` files.\n\n**Type**: `String`\n\n**Default**: `undefined`\n\n**Choices**: \n  - `first`: everything after the first dot\n  - `last`: everything after the last dot\n\n**Example:**\n\n```js\nconfig.expand({src: '*.js', dest: 'dist/', extDot: 'first'});\n```\n\n### cwd\n\n**Type**: `String`\n\n**Default**: `undefined`\n\n**Example:**\n\n```js\nconfig.expand({src: '*.js', dest: 'dist/', cwd: true});\n```\n\n### rename\n\n**Type**: `Function`\n\n**Default**: `src` is appended to the defined `dest`. If `flatten` is true, then `src` basename is appended to `dest`.\n\n**Example:**\n\n```js\nconfig.expand({\n  src: '*.js', \n  dest: 'dist/', \n  rename: true\n});\n```\n\n### filter\n\nFilter by `fs.lstat` \"type\" or using a custom filter function.\n\n**Type**: `Function|String`. \n\n**Default**: `undefined`\n\n**Example:**\n\nFilter by `fs.lstat` method name:\n\n```js\nconfig.expand({src: '**/*', dest: 'dist/', filter: 'isFile'});\n```\n\nFilter function:\n\n```js\nconfig.expand({\n  options: {\n    filter: function (str) {\n      return !/DS_Store/.test(str);\n    }\n  },\n  // dotfiles\n  src: ['.*']\n});\n\n// [ { src:\n//      [ '.editorconfig',\n//        '.git',\n//        '.gitattributes',\n//        '.gitignore',\n//        '.jshintrc',\n//        '.travis.yml',\n//        '.verb.md' ],\n//     dest: '' } ]\n```\n\n### options properties\n\nThe below \"special\" properties are fine to use either on an `options` object or on the root of the object passed to `expand-files`. \n\nEither way they will be normalized onto the `options` object to ensure that [globby][] and consuming libraries are passed the correct arguments.\n\n**special properties**\n\n- `base`\n- `cwd`\n- `destBase`\n- `mapDest`\n- `ext`\n- `extDot`\n- `extend`\n- `flatten`\n- `rename`\n- `process`\n- `srcBase`\n\n**example**\n\nBoth of the following will result in `mapDest` being on the `options` object.\n\n```js\nconfig.expand({src: '*.js', dest: 'dist/', options: {mapDest: true}});\nconfig.expand({src: '*.js', dest: 'dist/', mapDest: true});\n```\n\nBoth result in something like:\n\n```js\n{\n  options: { mapDest: true },\n  files:\n   [ { options: {}, src: [...], dest: 'dist/examples.js' },\n     { options: {}, src: [...], dest: 'dist/gulpfile.js' },\n     { options: {}, src: [...], dest: 'dist/index.js' },\n     { options: {}, src: [...], dest: 'dist/utils.js' } ] \n}\n```\n\n## Related projects\n* [expand](https://www.npmjs.com/package/expand): Recursively resolve templates in an object, string or array. | [homepage](https://github.com/jonschlinkert/expand)\n* [expand-config](https://www.npmjs.com/package/expand-config): Expand tasks, targets and files in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-config)\n* [expand-files](https://www.npmjs.com/package/expand-files): Expand glob patterns in a declarative configuration into src-dest mappings. | [homepage](https://github.com/jonschlinkert/expand-files)\n* [expand-target](https://www.npmjs.com/package/expand-target): Expand target definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-target)\n* [expand-task](https://www.npmjs.com/package/expand-task): Expand and normalize task definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-task)\n* [expand-utils](https://www.npmjs.com/package/expand-utils): Utils shared by the expand libs. | [homepage](https://github.com/jonschlinkert/expand-utils)\n* [map-dest](https://www.npmjs.com/package/map-dest): Map the destination path for a file based on the given source path and options. | [homepage](https://github.com/jonschlinkert/map-dest)\n* [normalize-config](https://www.npmjs.com/package/normalize-config): Normalize a declarative configuration with any combination of src-dest mappings, files arrays, files objects and… [more](https://www.npmjs.com/package/normalize-config) | [homepage](https://github.com/jonschlinkert/normalize-config)  \n\n## Coverage\n\n```\nStatements   : 100% (106/106)\nBranches     : 100% (57/57)\nFunctions    : 100% (11/11)\nLines        : 100% (104/104)\n```\n\n## Running tests\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/expand-files/issues/new).\n\n## Author\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\nCopyright © 2016 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on January 06, 2016._\n\n[expand]: https://github.com/jonschlinkert/expand\n[expand-config]: https://github.com/jonschlinkert/expand-config\n[expand-files]: https://github.com/jonschlinkert/expand-files\n[expand-target]: https://github.com/jonschlinkert/expand-target\n[expand-task]: https://github.com/jonschlinkert/expand-task\n[expand-utils]: https://github.com/jonschlinkert/expand-utils\n[map-dest]: https://github.com/jonschlinkert/map-dest\n[normalize-config]: https://github.com/jonschlinkert/normalize-config\n  \n[define-property]: https://github.com/jonschlinkert/define-property\n[expand-utils]: https://github.com/jonschlinkert/expand-utils\n[extend-shallow]: https://github.com/jonschlinkert/extend-shallow\n[glob-parent]: https://github.com/es128/glob-parent\n[has-glob]: https://github.com/jonschlinkert/has-glob\n[lazy-cache]: https://github.com/jonschlinkert/lazy-cache\n[matched]: https://github.com/jonschlinkert/matched\n[normalize-config]: https://github.com/jonschlinkert/normalize-config\n[object.omit]: https://github.com/jonschlinkert/object.omit\n[relative]: https://github.com/jonschlinkert/relative\n[resolve-dir]: https://github.com/jonschlinkert/resolve-dir\n[use]: https://github.com/jonschlinkert/use\n[object Object]\n\n",
  "readmeFilename": "README.md",
  "_id": "expand-files@0.7.1",
  "_shasum": "253571696bfa45e4c95e683ab8c919c4373be846",
  "_from": "expand-files@^0.7.1",
  "_resolved": "https://registry.npmjs.org/expand-files/-/expand-files-0.7.1.tgz"
}
